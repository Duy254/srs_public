/* Auto-generated by genmsg_cpp for file /home/beisheng/git/care-o-bot/srs_public/srs_symbolic_grounding/srv/GetWorkspaceOnMap.srv */
#ifndef SRS_SYMBOLIC_GROUNDING_SERVICE_GETWORKSPACEONMAP_H
#define SRS_SYMBOLIC_GROUNDING_SERVICE_GETWORKSPACEONMAP_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "srs_symbolic_grounding/SRSSpatialInfo.h"

namespace srs_symbolic_grounding
{
template <class ContainerAllocator>
struct GetWorkspaceOnMapRequest_ {
  typedef GetWorkspaceOnMapRequest_<ContainerAllocator> Type;

  GetWorkspaceOnMapRequest_()
  : map()
  , ifGeometryInfo(false)
  {
  }

  GetWorkspaceOnMapRequest_(const ContainerAllocator& _alloc)
  : map(_alloc)
  , ifGeometryInfo(false)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _map_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  map;

  typedef uint8_t _ifGeometryInfo_type;
  uint8_t ifGeometryInfo;


private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/GetWorkspaceOnMapRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "a14354db805feb47c061b3cb1b443b04"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4aac5a2e75ff4e1c2a3f288dcf79c97a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
\n\
\n\
\n\
string map\n\
\n\
\n\
\n\
\n\
bool ifGeometryInfo\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, map);
    ros::serialization::serialize(stream, ifGeometryInfo);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, map);
    ros::serialization::deserialize(stream, ifGeometryInfo);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(map);
    size += ros::serialization::serializationLength(ifGeometryInfo);
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetWorkspaceOnMapRequest
typedef  ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<std::allocator<void> > GetWorkspaceOnMapRequest;

typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest> GetWorkspaceOnMapRequestPtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest const> GetWorkspaceOnMapRequestConstPtr;


template <class ContainerAllocator>
struct GetWorkspaceOnMapResponse_ {
  typedef GetWorkspaceOnMapResponse_<ContainerAllocator> Type;

  GetWorkspaceOnMapResponse_()
  : objects()
  , classesOfObjects()
  , objectsInfo()
  , houseHoldId()
  {
  }

  GetWorkspaceOnMapResponse_(const ContainerAllocator& _alloc)
  : objects(_alloc)
  , classesOfObjects(_alloc)
  , objectsInfo(_alloc)
  , houseHoldId(_alloc)
  {
  }

  typedef std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  _objects_type;
  std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  objects;

  typedef std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  _classesOfObjects_type;
  std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  classesOfObjects;

  typedef std::vector< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> >::other >  _objectsInfo_type;
  std::vector< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> >::other >  objectsInfo;

  typedef std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  _houseHoldId_type;
  std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  houseHoldId;


  ROS_DEPRECATED uint32_t get_objects_size() const { return (uint32_t)objects.size(); }
  ROS_DEPRECATED void set_objects_size(uint32_t size) { objects.resize((size_t)size); }
  ROS_DEPRECATED void get_objects_vec(std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) const { vec = this->objects; }
  ROS_DEPRECATED void set_objects_vec(const std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) { this->objects = vec; }
  ROS_DEPRECATED uint32_t get_classesOfObjects_size() const { return (uint32_t)classesOfObjects.size(); }
  ROS_DEPRECATED void set_classesOfObjects_size(uint32_t size) { classesOfObjects.resize((size_t)size); }
  ROS_DEPRECATED void get_classesOfObjects_vec(std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) const { vec = this->classesOfObjects; }
  ROS_DEPRECATED void set_classesOfObjects_vec(const std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) { this->classesOfObjects = vec; }
  ROS_DEPRECATED uint32_t get_objectsInfo_size() const { return (uint32_t)objectsInfo.size(); }
  ROS_DEPRECATED void set_objectsInfo_size(uint32_t size) { objectsInfo.resize((size_t)size); }
  ROS_DEPRECATED void get_objectsInfo_vec(std::vector< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> >::other > & vec) const { vec = this->objectsInfo; }
  ROS_DEPRECATED void set_objectsInfo_vec(const std::vector< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::srs_symbolic_grounding::SRSSpatialInfo_<ContainerAllocator> >::other > & vec) { this->objectsInfo = vec; }
  ROS_DEPRECATED uint32_t get_houseHoldId_size() const { return (uint32_t)houseHoldId.size(); }
  ROS_DEPRECATED void set_houseHoldId_size(uint32_t size) { houseHoldId.resize((size_t)size); }
  ROS_DEPRECATED void get_houseHoldId_vec(std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) const { vec = this->houseHoldId; }
  ROS_DEPRECATED void set_houseHoldId_vec(const std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other > & vec) { this->houseHoldId = vec; }
private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/GetWorkspaceOnMapResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "f0aff2d3a86a260c64b631484c962daf"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4aac5a2e75ff4e1c2a3f288dcf79c97a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
\n\
\n\
string[] objects\n\
string[] classesOfObjects\n\
SRSSpatialInfo[] objectsInfo\n\
string[] houseHoldId\n\
\n\
================================================================================\n\
MSG: srs_symbolic_grounding/SRSSpatialInfo\n\
# Point point\n\
# Orientation angles\n\
float32 l\n\
float32 w\n\
float32 h\n\
\n\
geometry_msgs/Pose pose\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose\n\
# A representation of pose in free space, composed of postion and orientation. \n\
Point position\n\
Quaternion orientation\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, objects);
    ros::serialization::serialize(stream, classesOfObjects);
    ros::serialization::serialize(stream, objectsInfo);
    ros::serialization::serialize(stream, houseHoldId);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, objects);
    ros::serialization::deserialize(stream, classesOfObjects);
    ros::serialization::deserialize(stream, objectsInfo);
    ros::serialization::deserialize(stream, houseHoldId);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(objects);
    size += ros::serialization::serializationLength(classesOfObjects);
    size += ros::serialization::serializationLength(objectsInfo);
    size += ros::serialization::serializationLength(houseHoldId);
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetWorkspaceOnMapResponse
typedef  ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<std::allocator<void> > GetWorkspaceOnMapResponse;

typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse> GetWorkspaceOnMapResponsePtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse const> GetWorkspaceOnMapResponseConstPtr;

struct GetWorkspaceOnMap
{

typedef GetWorkspaceOnMapRequest Request;
typedef GetWorkspaceOnMapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetWorkspaceOnMap
} // namespace srs_symbolic_grounding

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a14354db805feb47c061b3cb1b443b04";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xa14354db805feb47ULL;
  static const uint64_t static_value2 = 0xc061b3cb1b443b04ULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetWorkspaceOnMapRequest";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
string map\n\
\n\
\n\
\n\
\n\
bool ifGeometryInfo\n\
\n\
\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f0aff2d3a86a260c64b631484c962daf";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf0aff2d3a86a260cULL;
  static const uint64_t static_value2 = 0x64b631484c962dafULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetWorkspaceOnMapResponse";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
string[] objects\n\
string[] classesOfObjects\n\
SRSSpatialInfo[] objectsInfo\n\
string[] houseHoldId\n\
\n\
================================================================================\n\
MSG: srs_symbolic_grounding/SRSSpatialInfo\n\
# Point point\n\
# Orientation angles\n\
float32 l\n\
float32 w\n\
float32 h\n\
\n\
geometry_msgs/Pose pose\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose\n\
# A representation of pose in free space, composed of postion and orientation. \n\
Point position\n\
Quaternion orientation\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.map);
    stream.next(m.ifGeometryInfo);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetWorkspaceOnMapRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.objects);
    stream.next(m.classesOfObjects);
    stream.next(m.objectsInfo);
    stream.next(m.houseHoldId);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetWorkspaceOnMapResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<srs_symbolic_grounding::GetWorkspaceOnMap> {
  static const char* value() 
  {
    return "4aac5a2e75ff4e1c2a3f288dcf79c97a";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMap&) { return value(); } 
};

template<>
struct DataType<srs_symbolic_grounding::GetWorkspaceOnMap> {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetWorkspaceOnMap";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMap&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4aac5a2e75ff4e1c2a3f288dcf79c97a";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetWorkspaceOnMap";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4aac5a2e75ff4e1c2a3f288dcf79c97a";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetWorkspaceOnMap";
  }

  static const char* value(const srs_symbolic_grounding::GetWorkspaceOnMapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SRS_SYMBOLIC_GROUNDING_SERVICE_GETWORKSPACEONMAP_H

