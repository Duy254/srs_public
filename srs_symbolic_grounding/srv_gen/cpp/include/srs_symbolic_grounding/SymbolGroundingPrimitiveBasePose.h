/* Auto-generated by genmsg_cpp for file /home/beisheng/git/care-o-bot/srs_public/srs_symbolic_grounding/srv/SymbolGroundingPrimitiveBasePose.srv */
#ifndef SRS_SYMBOLIC_GROUNDING_SERVICE_SYMBOLGROUNDINGPRIMITIVEBASEPOSE_H
#define SRS_SYMBOLIC_GROUNDING_SERVICE_SYMBOLGROUNDINGPRIMITIVEBASEPOSE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "geometry_msgs/Pose.h"


#include "geometry_msgs/Pose2D.h"

namespace srs_symbolic_grounding
{
template <class ContainerAllocator>
struct SymbolGroundingPrimitiveBasePoseRequest_ {
  typedef SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> Type;

  SymbolGroundingPrimitiveBasePoseRequest_()
  : obj_pose()
  {
  }

  SymbolGroundingPrimitiveBasePoseRequest_(const ContainerAllocator& _alloc)
  : obj_pose(_alloc)
  {
  }

  typedef  ::geometry_msgs::Pose_<ContainerAllocator>  _obj_pose_type;
   ::geometry_msgs::Pose_<ContainerAllocator>  obj_pose;


private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "bb4f375ce120c483948f2ea4a3476a32"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "9e95d0d21a8416a1a1a25043b4b05197"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "geometry_msgs/Pose obj_pose\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose\n\
# A representation of pose in free space, composed of postion and orientation. \n\
Point position\n\
Quaternion orientation\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, obj_pose);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, obj_pose);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(obj_pose);
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SymbolGroundingPrimitiveBasePoseRequest
typedef  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<std::allocator<void> > SymbolGroundingPrimitiveBasePoseRequest;

typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest> SymbolGroundingPrimitiveBasePoseRequestPtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest const> SymbolGroundingPrimitiveBasePoseRequestConstPtr;


template <class ContainerAllocator>
struct SymbolGroundingPrimitiveBasePoseResponse_ {
  typedef SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> Type;

  SymbolGroundingPrimitiveBasePoseResponse_()
  : pbp()
  {
  }

  SymbolGroundingPrimitiveBasePoseResponse_(const ContainerAllocator& _alloc)
  : pbp(_alloc)
  {
  }

  typedef  ::geometry_msgs::Pose2D_<ContainerAllocator>  _pbp_type;
   ::geometry_msgs::Pose2D_<ContainerAllocator>  pbp;


private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "e8c364d9bb8f76320600c94c42c450da"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "9e95d0d21a8416a1a1a25043b4b05197"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "geometry_msgs/Pose2D pbp\n\
\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose2D\n\
# This expresses a position and orientation on a 2D manifold.\n\
\n\
float64 x\n\
float64 y\n\
float64 theta\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, pbp);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, pbp);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(pbp);
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SymbolGroundingPrimitiveBasePoseResponse
typedef  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<std::allocator<void> > SymbolGroundingPrimitiveBasePoseResponse;

typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse> SymbolGroundingPrimitiveBasePoseResponsePtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse const> SymbolGroundingPrimitiveBasePoseResponseConstPtr;

struct SymbolGroundingPrimitiveBasePose
{

typedef SymbolGroundingPrimitiveBasePoseRequest Request;
typedef SymbolGroundingPrimitiveBasePoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SymbolGroundingPrimitiveBasePose
} // namespace srs_symbolic_grounding

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bb4f375ce120c483948f2ea4a3476a32";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xbb4f375ce120c483ULL;
  static const uint64_t static_value2 = 0x948f2ea4a3476a32ULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseRequest";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Pose obj_pose\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose\n\
# A representation of pose in free space, composed of postion and orientation. \n\
Point position\n\
Quaternion orientation\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e8c364d9bb8f76320600c94c42c450da";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe8c364d9bb8f7632ULL;
  static const uint64_t static_value2 = 0x0600c94c42c450daULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseResponse";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Pose2D pbp\n\
\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose2D\n\
# This expresses a position and orientation on a 2D manifold.\n\
\n\
float64 x\n\
float64 y\n\
float64 theta\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.obj_pose);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SymbolGroundingPrimitiveBasePoseRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.pbp);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SymbolGroundingPrimitiveBasePoseResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePose> {
  static const char* value() 
  {
    return "9e95d0d21a8416a1a1a25043b4b05197";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePose&) { return value(); } 
};

template<>
struct DataType<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePose> {
  static const char* value() 
  {
    return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePose";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePose&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9e95d0d21a8416a1a1a25043b4b05197";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePose";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9e95d0d21a8416a1a1a25043b4b05197";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePose";
  }

  static const char* value(const srs_symbolic_grounding::SymbolGroundingPrimitiveBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SRS_SYMBOLIC_GROUNDING_SERVICE_SYMBOLGROUNDINGPRIMITIVEBASEPOSE_H

