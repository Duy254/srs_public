/* Auto-generated by genmsg_cpp for file /home/beisheng/git/care-o-bot/srs_public/srs_symbolic_grounding/srv/GetRobotBasePose.srv */
#ifndef SRS_SYMBOLIC_GROUNDING_SERVICE_GETROBOTBASEPOSE_H
#define SRS_SYMBOLIC_GROUNDING_SERVICE_GETROBOTBASEPOSE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "geometry_msgs/Pose2D.h"

namespace srs_symbolic_grounding
{
template <class ContainerAllocator>
struct GetRobotBasePoseRequest_ {
  typedef GetRobotBasePoseRequest_<ContainerAllocator> Type;

  GetRobotBasePoseRequest_()
  {
  }

  GetRobotBasePoseRequest_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/GetRobotBasePoseRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "ea3141e104f2c92b1676fbd6e8c1a602"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetRobotBasePoseRequest
typedef  ::srs_symbolic_grounding::GetRobotBasePoseRequest_<std::allocator<void> > GetRobotBasePoseRequest;

typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseRequest> GetRobotBasePoseRequestPtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseRequest const> GetRobotBasePoseRequestConstPtr;


template <class ContainerAllocator>
struct GetRobotBasePoseResponse_ {
  typedef GetRobotBasePoseResponse_<ContainerAllocator> Type;

  GetRobotBasePoseResponse_()
  : rb_pose()
  {
  }

  GetRobotBasePoseResponse_(const ContainerAllocator& _alloc)
  : rb_pose(_alloc)
  {
  }

  typedef  ::geometry_msgs::Pose2D_<ContainerAllocator>  _rb_pose_type;
   ::geometry_msgs::Pose2D_<ContainerAllocator>  rb_pose;


private:
  static const char* __s_getDataType_() { return "srs_symbolic_grounding/GetRobotBasePoseResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "ea3141e104f2c92b1676fbd6e8c1a602"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "ea3141e104f2c92b1676fbd6e8c1a602"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "geometry_msgs/Pose2D rb_pose\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose2D\n\
# This expresses a position and orientation on a 2D manifold.\n\
\n\
float64 x\n\
float64 y\n\
float64 theta\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, rb_pose);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, rb_pose);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(rb_pose);
    return size;
  }

  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetRobotBasePoseResponse
typedef  ::srs_symbolic_grounding::GetRobotBasePoseResponse_<std::allocator<void> > GetRobotBasePoseResponse;

typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseResponse> GetRobotBasePoseResponsePtr;
typedef boost::shared_ptr< ::srs_symbolic_grounding::GetRobotBasePoseResponse const> GetRobotBasePoseResponseConstPtr;

struct GetRobotBasePose
{

typedef GetRobotBasePoseRequest Request;
typedef GetRobotBasePoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetRobotBasePose
} // namespace srs_symbolic_grounding

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetRobotBasePoseRequest";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ea3141e104f2c92b1676fbd6e8c1a602";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xea3141e104f2c92bULL;
  static const uint64_t static_value2 = 0x1676fbd6e8c1a602ULL;
};

template<class ContainerAllocator>
struct DataType< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetRobotBasePoseResponse";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Pose2D rb_pose\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose2D\n\
# This expresses a position and orientation on a 2D manifold.\n\
\n\
float64 x\n\
float64 y\n\
float64 theta\n\
";
  }

  static const char* value(const  ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetRobotBasePoseRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.rb_pose);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetRobotBasePoseResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<srs_symbolic_grounding::GetRobotBasePose> {
  static const char* value() 
  {
    return "ea3141e104f2c92b1676fbd6e8c1a602";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePose&) { return value(); } 
};

template<>
struct DataType<srs_symbolic_grounding::GetRobotBasePose> {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetRobotBasePose";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePose&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ea3141e104f2c92b1676fbd6e8c1a602";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetRobotBasePose";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePoseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ea3141e104f2c92b1676fbd6e8c1a602";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "srs_symbolic_grounding/GetRobotBasePose";
  }

  static const char* value(const srs_symbolic_grounding::GetRobotBasePoseResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SRS_SYMBOLIC_GROUNDING_SERVICE_GETROBOTBASEPOSE_H

