"""autogenerated by genmsg_py from SymbolGroundingPrimitiveBasePoseRequest.msg. Do not edit."""
import roslib.message
import struct

import geometry_msgs.msg

class SymbolGroundingPrimitiveBasePoseRequest(roslib.message.Message):
  _md5sum = "bb4f375ce120c483948f2ea4a3476a32"
  _type = "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseRequest"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """geometry_msgs/Pose obj_pose

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of postion and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

"""
  __slots__ = ['obj_pose']
  _slot_types = ['geometry_msgs/Pose']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.
    
    The available fields are:
       obj_pose
    
    @param args: complete set of field values, in .msg order
    @param kwds: use keyword arguments corresponding to message field names
    to set specific fields. 
    """
    if args or kwds:
      super(SymbolGroundingPrimitiveBasePoseRequest, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.obj_pose is None:
        self.obj_pose = geometry_msgs.msg.Pose()
    else:
      self.obj_pose = geometry_msgs.msg.Pose()

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    @param buff: buffer
    @type  buff: StringIO
    """
    try:
      _x = self
      buff.write(_struct_7d.pack(_x.obj_pose.position.x, _x.obj_pose.position.y, _x.obj_pose.position.z, _x.obj_pose.orientation.x, _x.obj_pose.orientation.y, _x.obj_pose.orientation.z, _x.obj_pose.orientation.w))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    @param str: byte array of serialized message
    @type  str: str
    """
    try:
      if self.obj_pose is None:
        self.obj_pose = geometry_msgs.msg.Pose()
      end = 0
      _x = self
      start = end
      end += 56
      (_x.obj_pose.position.x, _x.obj_pose.position.y, _x.obj_pose.position.z, _x.obj_pose.orientation.x, _x.obj_pose.orientation.y, _x.obj_pose.orientation.z, _x.obj_pose.orientation.w,) = _struct_7d.unpack(str[start:end])
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    @param buff: buffer
    @type  buff: StringIO
    @param numpy: numpy python module
    @type  numpy module
    """
    try:
      _x = self
      buff.write(_struct_7d.pack(_x.obj_pose.position.x, _x.obj_pose.position.y, _x.obj_pose.position.z, _x.obj_pose.orientation.x, _x.obj_pose.orientation.y, _x.obj_pose.orientation.z, _x.obj_pose.orientation.w))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    @param str: byte array of serialized message
    @type  str: str
    @param numpy: numpy python module
    @type  numpy: module
    """
    try:
      if self.obj_pose is None:
        self.obj_pose = geometry_msgs.msg.Pose()
      end = 0
      _x = self
      start = end
      end += 56
      (_x.obj_pose.position.x, _x.obj_pose.position.y, _x.obj_pose.position.z, _x.obj_pose.orientation.x, _x.obj_pose.orientation.y, _x.obj_pose.orientation.z, _x.obj_pose.orientation.w,) = _struct_7d.unpack(str[start:end])
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

_struct_I = roslib.message.struct_I
_struct_7d = struct.Struct("<7d")
"""autogenerated by genmsg_py from SymbolGroundingPrimitiveBasePoseResponse.msg. Do not edit."""
import roslib.message
import struct

import geometry_msgs.msg

class SymbolGroundingPrimitiveBasePoseResponse(roslib.message.Message):
  _md5sum = "e8c364d9bb8f76320600c94c42c450da"
  _type = "srs_symbolic_grounding/SymbolGroundingPrimitiveBasePoseResponse"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """geometry_msgs/Pose2D pbp



================================================================================
MSG: geometry_msgs/Pose2D
# This expresses a position and orientation on a 2D manifold.

float64 x
float64 y
float64 theta
"""
  __slots__ = ['pbp']
  _slot_types = ['geometry_msgs/Pose2D']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.
    
    The available fields are:
       pbp
    
    @param args: complete set of field values, in .msg order
    @param kwds: use keyword arguments corresponding to message field names
    to set specific fields. 
    """
    if args or kwds:
      super(SymbolGroundingPrimitiveBasePoseResponse, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.pbp is None:
        self.pbp = geometry_msgs.msg.Pose2D()
    else:
      self.pbp = geometry_msgs.msg.Pose2D()

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    @param buff: buffer
    @type  buff: StringIO
    """
    try:
      _x = self
      buff.write(_struct_3d.pack(_x.pbp.x, _x.pbp.y, _x.pbp.theta))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    @param str: byte array of serialized message
    @type  str: str
    """
    try:
      if self.pbp is None:
        self.pbp = geometry_msgs.msg.Pose2D()
      end = 0
      _x = self
      start = end
      end += 24
      (_x.pbp.x, _x.pbp.y, _x.pbp.theta,) = _struct_3d.unpack(str[start:end])
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    @param buff: buffer
    @type  buff: StringIO
    @param numpy: numpy python module
    @type  numpy module
    """
    try:
      _x = self
      buff.write(_struct_3d.pack(_x.pbp.x, _x.pbp.y, _x.pbp.theta))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    @param str: byte array of serialized message
    @type  str: str
    @param numpy: numpy python module
    @type  numpy: module
    """
    try:
      if self.pbp is None:
        self.pbp = geometry_msgs.msg.Pose2D()
      end = 0
      _x = self
      start = end
      end += 24
      (_x.pbp.x, _x.pbp.y, _x.pbp.theta,) = _struct_3d.unpack(str[start:end])
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

_struct_I = roslib.message.struct_I
_struct_3d = struct.Struct("<3d")
class SymbolGroundingPrimitiveBasePose(roslib.message.ServiceDefinition):
  _type          = 'srs_symbolic_grounding/SymbolGroundingPrimitiveBasePose'
  _md5sum = '9e95d0d21a8416a1a1a25043b4b05197'
  _request_class  = SymbolGroundingPrimitiveBasePoseRequest
  _response_class = SymbolGroundingPrimitiveBasePoseResponse
